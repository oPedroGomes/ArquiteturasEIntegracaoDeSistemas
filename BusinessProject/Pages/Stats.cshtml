@page "/Stats"
@using Newtonsoft.Json;
@model BusinessProject.Pages.StatsModel
@{
    ViewData["Title"] = "Stats";
}
<div class="row">
    <div class="col">
        <canvas id="chartEquipas"></canvas>
    </div>
    <div class="col">
        <canvas id="chartJogos"></canvas>
    </div>
</div>
<div class="row">
    <div class="col">
        <table class="table">
            <thead>
                <tr>
                    <th>Email</th>
                    <th>Nº Pedidos</th>
                    <!-- Add more properties here -->
                </tr>
            </thead>
            <tbody>
                @foreach (var userStat in Model.DadosUser)
                {
                    <tr>
                        <td>@userStat.Email</td>
                        <td>@userStat.CountPedidos</td>
                        <!-- Add more properties here -->
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="col">
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    const ctx = document.getElementById('chartEquipas');

    new Chart(ctx, {
        type: 'bar',
        data: {
            labels: @Html.Raw(JsonConvert.SerializeObject(Model.labelsEquipa.ToArray())),
            datasets: [{
                label: 'Equipas mais pesquisadas',
                data: @Html.Raw(JsonConvert.SerializeObject(Model.dataEquipa.ToArray())),
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });

    const ctx2 = document.getElementById('chartJogos');

    new Chart(ctx2, {
        type: 'bar',
        data: {
            labels: @Html.Raw(JsonConvert.SerializeObject(Model.labelsJogos.ToList())),
            datasets: [{
                label: 'Jogos mais pesquisados',
                data: @Html.Raw(JsonConvert.SerializeObject(Model.dataJogos.ToArray())),
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
</script>
